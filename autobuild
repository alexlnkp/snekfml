#!/bin/bash

# NOTE: Better to have UPX if you want to build the lowest possible executable.

set -e

ADDFLAGS=""
COMPRESS=1

show_help() {
	echo "Usage: $0 [OPTION] [ARG]"
	echo
	echo "      Common flags:"
	echo
	echo "  -h, --help             Show this help message and exit."
	echo "  -d, --debug [X]        Build the program in debug mode. If there's any argument given to this flag - build with GraphicDebugging"
	echo
	echo "      Compression settings:"
	echo
	echo "  -n, --nocompression    [OVERRIDE] - Don't apply any additional compression to compiled executable"
	echo "  -f, --forcecompression [OVERRIDE] - Force compression on compiled executable"
	echo
	echo "  Note: If no flags are given, the program will be built in release mode with extra compression afterwards."
	echo
	exit 0
}

# To build        Debug - use `./autobuild -d`
# To build GraphicDebug - use `./autobuild -d X`
while [[ $# -gt 0 ]]; do
	case $1 in
		-d|--debug) 
			if [[ -n $2 ]]; then
				ADDFLAGS="$ADDFLAGS DEBUG=1 GRDBG=1"
				shift
			else
				ADDFLAGS="$ADDFLAGS DEBUG=1"
			fi
			COMPRESS=0 ;;

		-h|--help)
			show_help
			exit 0 ;;
		
		-n|--nocompression)
			echo Will not compress compiled executable.
			COMPRESS=0 ;;

		-*|--*)
      echo "Unknown option $1"
			show_help
      exit 1
      ;;

		*)
			break ;;
	esac
	shift
done

# Just build with config in Makefile
make clean && make $ADDFLAGS

# Compress if not building Debug.
if [[ $COMPRESS = 1 ]]; then
	# Stripping everything that isn't required to launch the app
	strip -x -X -s -R .gnu.version -R .gnu.version_r. output/main

	if command -p which upx; then
		echo "UPX found, proceeding to compress the binary..."
		upx --best --compress-icons=3 --ultra-brute output/main
	else
		echo "UPX not found. Exiting..."
		exit 0
	fi
fi